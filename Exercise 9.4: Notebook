'''
As this is the last exercise for procedural programming, this exercise is also a sort of final project, which implements all of the things discussed during the course. Also, even this if this exercise is marked as an exercise for the continuing notebook program, the changes made in the program will be rather excessive, so it may be a good idea to start from a clean plate.


In this exercise the idea is to build a notebook which applies the Python data structure list as a note manipulation method when the program is executed, and saves the data in a bitwise mode with pickle. The program has the following features:
A) It is possible to add notes, with similar timestamps as earlier. 
B)It is possible to edit a note by selecting it from the list, and rewriting it with new data.
C) It is possible to delete notes separately based on the selection and 
D) Notebook loads an existing notebook file from the file "notebook.dat" if such a file exists.
'''
# -*- coding: cp1252 -*-
import time 
import pickle 

list=[]

try:
	readfile=open("notebook.dat","rb")
	content=pickle.load(readfile)
	readfile.close()
except IOError:
	print("No default notebook was found, created one.")
	readfile=open("notebook.dat","wb")
	pickle.dump(list,readfile)
	readfile.close()

while True:
	print("(1) Read the notebook\n(2) Add note\n(3) Edit a note\n(4) Delete a note\n(5) Save and quit")

	choice = int(input("Please select one: "))
	
	if choice == 1:
		for i in list:
			print(i)

	elif choice == 2:
		content=input("Write a new note: ")
		list.append(content + ":::"+ time.strftime("%X %x") + "\n")
	
	elif choice == 3:
		print("The list has ",str(len(list)), "notes.")
		change=int(input("Which of them will be changed?: "))
		print(list[change])
		new=input("Give the new note: ")
		list[change]= (new+ ":::"+ time.strftime("%X %x") + "\n")
			
	elif choice == 4:
		try:
			print("The list has ", str(len(list)), "notes.")
			delete= int(input("Which of them will be deleted?: "))
			print("Deleted note", list[delete])
			list.pop(delete)
		except IndexError:
			print("Deleted note", list[delete -1])
			list.pop(delete-1)
		
	else:
		print("Notebook shutting down, thank you.")
		break
